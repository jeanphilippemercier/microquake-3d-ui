stages:
- base
- build
- test
- docker
- deploy

variables:
  CLI_VERSION: 7.2.3
  DOCKER_DRIVER: overlay2
  BASE_IMAGE: ${CI_REGISTRY_IMAGE}/base
  UI_IMAGE: ${CI_REGISTRY_IMAGE}/ui
  ONPREM_IMAGE: ${CI_REGISTRY_IMAGE}/onprem
  CI_APPLICATION_TAG: $(echo ${CI_COMMIT_SHA} | cut -c1-8)

base:
  image: docker:stable
  stage: base
  services:
  - name: docker:stable-dind
    entrypoint:
    - dockerd-entrypoint.sh
  only:
    changes:
      - docker/**/*
  script:
  - git submodule update --init --recursive
  - cd docker
  - docker login -u deploy -p $CI_JOB_TOKEN $CI_REGISTRY
  - docker build . -t $BASE_IMAGE:latest -t $BASE_IMAGE:$(echo $CI_COMMIT_SHA | cut -c1-8) --build-arg SSH_PRIVATE_KEY
  - docker push $BASE_IMAGE:latest
  - docker push $BASE_IMAGE:$(echo $CI_COMMIT_SHA | cut -c1-8)

build:
  stage: build
  image: node:10
  script:
  - cd client/vue
  - npm install
  - npm run build
  artifacts:
    expire_in: 2 months
    paths:
    - client/www

docker:
  image: docker:stable
  stage: docker
  dependencies:
  - build
  services:
  - name: docker:18-dind
    entrypoint:
    - dockerd-entrypoint.sh
  script:
  - git submodule update --init --recursive
  - docker login -u deploy -p $CI_JOB_TOKEN $CI_REGISTRY
  - docker build . -t $UI_IMAGE:latest -t $UI_IMAGE:$(echo $CI_COMMIT_SHA | cut -c1-8) --build-arg SSH_PRIVATE_KEY
  - docker push $UI_IMAGE:latest
  - docker push $UI_IMAGE:$(echo $CI_COMMIT_SHA | cut -c1-8)
  - sed -i /external/apps/quake/www/js/app.*.js -e 's/api.microquake.org/api.otgeo.corp.microquake.org/g'
  - docker build . -t $ONPREM_IMAGE:latest -t $ONPREM_IMAGE:$(echo $CI_COMMIT_SHA | cut -c1-8) --build-arg SSH_PRIVATE_KEY
  - docker push $ONPREM_IMAGE:latest
  - docker push $ONPREM_IMAGE:$(echo $CI_COMMIT_SHA | cut -c1-8)

kube:
  image: docker:stable
  stage: deploy
  script:
    - wget https://storage.googleapis.com/kubernetes-release/release/${KUBE_VERSION}/bin/linux/amd64/kubectl
    - chmod +x kubectl
    - echo "$KUBE" > admin.conf
    - ./kubectl --kubeconfig admin.conf set image deployment.v1.apps/threed-ui-staging *=$UI_IMAGE:$(echo $CI_COMMIT_SHA | cut -c1-8) --record=true
